<Popup 
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Classic" xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity" xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions" xmlns:local="clr-namespace:ExtrusionUI.VirtualKeyboard" x:Name="popup" x:Class="ExtrusionUI.VirtualKeyboard.NumericKeyboard"
    AllowsTransparency="True"
    PopupAnimation="Scroll" Width="175" Height="200">
    <Popup.Resources>
        <Style x:Key="FullKeyboardStyle1" TargetType="{x:Type Button}">
            <Setter Property="FontFamily" Value="Segoe UI" />
            <Setter Property="FontWeight" Value="Bold" />
            <Setter Property="FontSize" Value="8" />
            <!--<Setter Property="BorderThickness" Value="0,0,0,0" />-->
            <!--<Setter Property="Margin" Value="0.5,1,0.5,1" />-->
            <Setter Property="Focusable" Value="False" />
            <Setter Property="IsTabStop" Value="False" />
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <!--<Setter Property="FontSize" Value="14" />-->
                    <Setter Property="Background" Value="LightBlue" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="FullKeyboardStyle2" TargetType="{x:Type Path}">
            <Setter Property="Stroke" Value="#FF787878" />
            <Setter Property="Fill" Value="#FFC8C8C8" />
            <Setter Property="StrokeThickness" Value="0.8" />
            <Setter Property="StrokeStartLineCap" Value="Round" />
            <Setter Property="StrokeEndLineCap" Value="Round" />
            <Setter Property="StrokeLineJoin" Value="Round" />
            <Setter Property="HorizontalAlignment" Value="Center" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="Margin" Value="1,0,1,0" />
        </Style>
        <Style x:Key="FullKeyboardStyle3" TargetType="{x:Type Button}">
            <Setter Property="BorderThickness" Value="0,0,0,0" />
            <Setter Property="Margin" Value="4,1,0.5,1" />
            <Setter Property="Focusable" Value="False" />
            <Setter Property="IsTabStop" Value="False" />
        </Style>
        <Style x:Key="FullKeyboardStyle4" TargetType="{x:Type Path}">
            <Setter Property="Stroke" Value="#FF787878" />
            <Setter Property="Fill" Value="#FFC8C8C8" />
            <Setter Property="StrokeThickness" Value="0.8" />
            <Setter Property="StrokeStartLineCap" Value="Round" />
            <Setter Property="StrokeEndLineCap" Value="Round" />
            <Setter Property="StrokeLineJoin" Value="Round" />
            <Setter Property="HorizontalAlignment" Value="Center" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="Margin" Value="1.5,3,1.5,3" />
        </Style>
        <Style x:Key="CloseButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Setter Property="Focusable" Value="False" />
            <Setter Property="IsTabStop" Value="False" />
            <Setter Property="Height" Value="50"/>
            <Setter Property="Width" Value="50" />
            <Setter Property="Background" Value="LightGray"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Canvas >
                            <Rectangle Stroke="Black" RadiusX="5" RadiusY="5" Fill="{TemplateBinding Background}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}" StrokeThickness="2"/>
                            <Grid Height="{TemplateBinding Height}" Width="{TemplateBinding Width}">
                                <Line X1="-1" Y1="1" Stretch="Fill" Stroke="White" StrokeThickness="2" Margin="15"/>
                                <Line X1="1" Y1="1"  Stretch="Fill" Stroke="White" StrokeThickness="2" Margin="15"/>
                            </Grid>
                        </Canvas>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="LightBlue" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ButtonFocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Border>
                            <Rectangle StrokeDashArray="1 2" StrokeThickness="1" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" Margin="4"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ButtonStyle1" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderBrush" Value="{x:Static Themes:ClassicBorderDecorator.ClassicBorderBrush}"/>
            <Setter Property="BorderThickness" Value="3"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="0,0,0,0"/>
            <Setter Property="FontWeight" Value="Bold" />
            <Setter Property="FontFamily" Value="Segoe UI" />
            <Setter Property="FontSize" Value="8" />
            <Setter Property="Focusable" Value="False" />
            <Setter Property="IsTabStop" Value="False" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border CornerRadius="5" BorderBrush="{TemplateBinding Foreground}" BorderThickness="2" Background="{TemplateBinding Background}" Margin="1" >
                            <Themes:ClassicBorderDecorator x:Name="ContentContainer"   SnapsToDevicePixels="true">
                                <Viewbox  >
                                    <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                </Viewbox>
                            </Themes:ClassicBorderDecorator>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsKeyboardFocused" Value="true">
                                <Setter Property="BorderStyle" TargetName="ContentContainer" Value="RaisedFocused"/>
                            </Trigger>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderStyle" TargetName="ContentContainer" Value="RaisedFocused"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="BorderStyle" TargetName="ContentContainer" Value="RaisedPressed"/>
                            </Trigger>
                            <Trigger Property="ToggleButton.IsChecked" Value="true">
                                <Setter Property="BorderStyle" TargetName="ContentContainer" Value="RaisedPressed"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="LightBlue" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
    </Popup.Resources>

    <Grid Height="{Binding Height, ElementName=popup}" Width="{Binding Width, ElementName=popup}">
        <!-- Main border for the popup keyboard -->
        <Border x:Name="bdMainBorder"
            Width="Auto"
            Height="Auto" 
            BorderBrush="Black"
            BorderThickness="1"
            Background="White"
            CornerRadius="5"
            Visibility="Visible">

            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>

                <!-- Border the the Number Keyboard -->
                <Border x:Name="bdKeyboard"
                    Grid.Row="1"
                    Background="Transparent"
                    Margin="10,8,10,10">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>

                        <!-- Grid for the Numric Keyboard -->
                        <Grid Grid.Row="0" x:Name="grdNumericKeyboard" Visibility="Visible">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*" />
                                <RowDefinition/>
                                <RowDefinition Height="*" />
                                <RowDefinition Height="*" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>
                            <Grid Grid.Row="0">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>

                                <Button x:Name="btn010100" Style="{DynamicResource ButtonStyle1}" Content="7" CommandParameter="{Binding Mode=OneWay, RelativeSource={RelativeSource Self}}" ClickMode="Release" Command="{Binding numericButtonClick, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:NumericKeyboard}}}"  />
                                <Button x:Name="btn010101" Style="{DynamicResource ButtonStyle1}" Content="8" CommandParameter="{Binding Mode=OneWay, RelativeSource={RelativeSource Self}}" ClickMode="Release" Command="{Binding numericButtonClick, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:NumericKeyboard}}}" Grid.Column="1"/>
                                <Button x:Name="btn010102" Style="{DynamicResource ButtonStyle1}" Content="9" CommandParameter="{Binding Mode=OneWay, RelativeSource={RelativeSource Self}}" ClickMode="Release" Command="{Binding numericButtonClick, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:NumericKeyboard}}}" Grid.Column="2"/>
                                <Button x:Name="btn010103" Style="{DynamicResource ButtonStyle1}" Content="-" CommandParameter="{Binding Mode=OneWay, RelativeSource={RelativeSource Self}}" ClickMode="Release" Command="{Binding numericButtonClick, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:NumericKeyboard}}}" Grid.Column="3"/>
                            </Grid>
                            <Grid Grid.Row="1">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Button x:Name="btn010200" Style="{DynamicResource ButtonStyle1}" Content="4" CommandParameter="{Binding Mode=OneWay, RelativeSource={RelativeSource Self}}" ClickMode="Release" Command="{Binding numericButtonClick, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:NumericKeyboard}}}" />
                                <Button x:Name="btn010201" Style="{DynamicResource ButtonStyle1}" Content="5" CommandParameter="{Binding Mode=OneWay, RelativeSource={RelativeSource Self}}" ClickMode="Release" Command="{Binding numericButtonClick, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:NumericKeyboard}}}" Grid.Column="1"/>
                                <Button x:Name="btn010202" Style="{DynamicResource ButtonStyle1}" Content="6" CommandParameter="{Binding Mode=OneWay, RelativeSource={RelativeSource Self}}" ClickMode="Release" Command="{Binding numericButtonClick, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:NumericKeyboard}}}" Grid.Column="2"/>
                                <!-- Left arrow Key -->
                                <Button x:Name="btn010203" Style="{DynamicResource ButtonStyle1}" CommandParameter="{Binding Mode=OneWay, RelativeSource={RelativeSource Self}}" ClickMode="Release" Command="{Binding numericButtonClick, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:NumericKeyboard}}}" Grid.Column="3">
                                    <Canvas Width="13" Height="11">
                                        <Path Style="{StaticResource FullKeyboardStyle2}">
                                            <Path.Data>
                                                <GeometryGroup>
                                                    <PathGeometry Figures="M0,6 L4,3 L4,5 L10,5 L10,7 L4,7 L4,9 z"/>
                                                </GeometryGroup>
                                            </Path.Data>
                                        </Path>
                                    </Canvas>
                                </Button>
                            </Grid>
                            <Grid Grid.Row="2">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Button x:Name="btn010300" Style="{DynamicResource ButtonStyle1}" Content="1" CommandParameter="{Binding Mode=OneWay, RelativeSource={RelativeSource Self}}" ClickMode="Release" Command="{Binding numericButtonClick, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:NumericKeyboard}}}" />
                                <Button x:Name="btn010301" Style="{DynamicResource ButtonStyle1}" Content="2" CommandParameter="{Binding Mode=OneWay, RelativeSource={RelativeSource Self}}" ClickMode="Release" Command="{Binding numericButtonClick, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:NumericKeyboard}}}" Grid.Column="1"/>
                                <Button x:Name="btn010302" Style="{DynamicResource ButtonStyle1}" Content="3" CommandParameter="{Binding Mode=OneWay, RelativeSource={RelativeSource Self}}" ClickMode="Release" Command="{Binding numericButtonClick, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:NumericKeyboard}}}" Grid.Column="2" />
                                <!-- Right arrow Key -->
                                <Button x:Name="btn010303" Style="{DynamicResource ButtonStyle1}" CommandParameter="{Binding Mode=OneWay, RelativeSource={RelativeSource Self}}" ClickMode="Release" Command="{Binding numericButtonClick, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:NumericKeyboard}}}" Grid.Column="3">
                                    <Canvas Width="13" Height="11">
                                        <Path Style="{StaticResource FullKeyboardStyle2}">
                                            <Path.Data>
                                                <GeometryGroup>
                                                    <PathGeometry Figures="M1,5 L8,5 L8,3 L11,6 L8,9 L8,7 L1,7 z"/>
                                                </GeometryGroup>
                                            </Path.Data>
                                        </Path>
                                    </Canvas>
                                </Button>
                            </Grid>
                            <Grid Grid.Row="3">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="2*"/>
                                </Grid.ColumnDefinitions>
                                <Button x:Name="btn010400" Style="{DynamicResource ButtonStyle1}" Content="0" CommandParameter="{Binding Mode=OneWay, RelativeSource={RelativeSource Self}}" ClickMode="Release" Command="{Binding numericButtonClick, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:NumericKeyboard}}}" />
                                <Button x:Name="btn010401" Style="{DynamicResource ButtonStyle1}" Content="." CommandParameter="{Binding Mode=OneWay, RelativeSource={RelativeSource Self}}" ClickMode="Release" Command="{Binding numericButtonClick, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:NumericKeyboard}}}" Grid.Column="1"/>
                                <!-- BackSpace Button -->
                                <Button x:Name="btn010402" Style="{DynamicResource ButtonStyle1}" CommandParameter="{Binding Mode=OneWay, RelativeSource={RelativeSource Self}}" ClickMode="Release" Command="{Binding numericButtonClick, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:NumericKeyboard}}}" Grid.Column="2">
                                    <Canvas Width="13" Height="11">
                                        <Path Style="{StaticResource FullKeyboardStyle4}">
                                            <Path.Data>
                                                <GeometryGroup>
                                                    <PathGeometry Figures="M3,0 L9.5,0 L9.5,5 L3,5 L0,2.5 z M4,1.5 L7.5,3.5 M4,3.5 L7.5,1.5"/>
                                                </GeometryGroup>
                                            </Path.Data>
                                        </Path>
                                    </Canvas>
                                </Button>

                            </Grid>
                            <Grid Grid.Row="4" >
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>
                                <!-- Close button -->
                                <Grid x:Name="grid" Grid.Column="0" >
                                    <Button x:Name="btnCloseButton" Style="{StaticResource CloseButtonStyle}" Command="{Binding closeClick, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:NumericKeyboard}}}" ClickMode="Release" Width="{Binding ActualWidth, ElementName=grid}" Height="{Binding ActualHeight, ElementName=grid}"   />
                                </Grid>
                                <Button Style="{DynamicResource ButtonStyle1}" Content="Enter"  ClickMode="Release" Grid.Column="2" Grid.ColumnSpan="2" Command="{Binding enterClick, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:NumericKeyboard}}}" />
                            </Grid>
                        </Grid>

                    </Grid>
                </Border>


            </Grid>

        </Border>
    </Grid>

</Popup>
